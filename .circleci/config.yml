version: 2.1

# Define the commands to be used in the jobs
commands:
  install_dependencies:
    description: "Install necessary dependencies"
    parameters:
      package_manager:
        type: string
      packages:
        type: string
    steps:
      - run: |
          << parameters.package_manager >> update && << parameters.package_manager >> install << parameters.packages >> -y

  configure_and_execute:
    description: "Configure environment and execute WireGuard Manager"
    steps:
      - run:
          name: Configure environment and execute WireGuard Manager
          command: |
            curl https://raw.githubusercontent.com/complexorganizations/wireguard-manager/main/wireguard-manager.sh --create-dirs -o /usr/local/bin/wireguard-manager.sh
            chmod +x /usr/local/bin/wireguard-manager.sh
            bash /usr/local/bin/wireguard-manager.sh --install

# Define the jobs to be used in the workflows
jobs:
  test_on_ubuntu:
    description: "Test on Ubuntu"
    docker:
      - image: ubuntu:latest
    steps:
      - checkout
      - install_dependencies:
          package_manager: apt-get
          packages: curl bash coreutils
      - configure_and_execute

  test_on_debian:
    description: "Test on Debian"
    docker:
      - image: debian:latest
    steps:
      - checkout
      - install_dependencies:
          package_manager: apt-get
          packages: curl bash coreutils
      - configure_and_execute

  test_on_centos:
    description: "Test on CentOS"
    docker:
      - image: centos:8
    steps:
      - checkout
      - install_dependencies:
          package_manager: dnf
          packages: curl bash coreutils
      - configure_and_execute

  test_on_alpine:
    description: "Test on Alpine"
    docker:
      - image: alpine:latest
    steps:
      - checkout
      - install_dependencies:
          package_manager: apk
          packages: curl bash coreutils
      - configure_and_execute

  test_on_fedora:
    description: "Test on Fedora"
    docker:
      - image: fedora:latest
    steps:
      - checkout
      - install_dependencies:
          package_manager: dnf
          packages: curl bash coreutils
      - configure_and_execute

  test_on_arch:
    description: "Test on Arch Linux"
    docker:
      - image: archlinux:latest
    steps:
      - checkout
      - install_dependencies:
          package_manager: pacman
          packages: curl bash coreutils
      - configure_and_execute

# Define the workflows
workflows:
  version: 2
  comprehensive_tests:
    description: "Perform comprehensive tests on multiple Linux distributions"
    jobs:
      - test_on_ubuntu
      - test_on_debian
      - test_on_centos
      - test_on_alpine
      - test_on_fedora
      - test_on_arch
