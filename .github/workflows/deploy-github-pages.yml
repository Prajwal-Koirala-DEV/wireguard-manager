# Name of the workflow
name: Deploy files to GitHub Pages

# Define the events that trigger the workflow
on:
  # Trigger the workflow on push events
  push:
    # Specify branches that trigger the workflow (only "main" branch here)
    branches:
      - "main"
    # Specify paths that trigger the workflow when modified
    paths:
      - "assets/hosts"
      - "assets/named.cache"
      - "wireguard-manager.sh"
  # Allow manual triggering of the workflow via the GitHub Actions interface
  workflow_dispatch:

# Define permissions for the workflow
permissions:
  # Grant read access to repository contents
  contents: read
  # Grant write access to GitHub Pages for deployment
  pages: write
  # Grant write access to GitHub ID tokens (used for authentication)
  id-token: write

# Define concurrency settings to manage workflow runs
concurrency:
  # Group name for managing concurrency of workflow runs
  group: "pages"
  # Automatically cancel in-progress runs of this workflow group when a new one starts
  cancel-in-progress: true

# Define the jobs in the workflow
jobs:
  # Job to handle deployment
  deploy:
    # Define environment-related settings for this job
    environment:
      # Name of the environment (used for deployment tracking)
      name: github-pages
      # Dynamic URL of the GitHub Pages environment, retrieved from deployment step output
      url: ${{ steps.deployment.outputs.page_url }}
    # Specify the type of runner to execute this job (Ubuntu-based runner)
    runs-on: ubuntu-latest
    # Define the steps to execute within this job
    steps:
      # Step 1: Check out the repository code
      - name: Checkout
        uses: actions/checkout@v4

      # Step 2: Set up GitHub Pages for deployment
      - name: Setup Pages
        uses: actions/configure-pages@v5

      # Step 3: Upload specified files from the repository as an artifact
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          # Name of the artifact
          name: github-pages
          # Paths to include in the artifact
          path: |
            assets/hosts
            assets/named.cache
            wireguard-manager.sh

      # Step 4: Deploy the uploaded artifact to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4